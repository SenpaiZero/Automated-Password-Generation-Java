/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.passwordgeneration;

import java.security.SecureRandom;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import java.awt.datatransfer.StringSelection;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
/**
 *
 * @author Xeb
 */
public class Registration extends javax.swing.JFrame {

    boolean isValidEmail = false;
    /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        validateBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        generateBtn = new javax.swing.JButton();
        specialCB = new javax.swing.JCheckBox();
        numberCB = new javax.swing.JCheckBox();
        lengthCB = new javax.swing.JCheckBox();
        autoRB = new javax.swing.JRadioButton();
        manualRB = new javax.swing.JRadioButton();
        copyTB = new javax.swing.JTextField();
        passwordTB = new javax.swing.JTextField();
        rePasswordTB = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        registerBtn = new javax.swing.JButton();
        nameTB = new javax.swing.JTextField();
        usernameTB = new javax.swing.JTextField();
        emailTB = new javax.swing.JTextField();
        lengthTB = new javax.swing.JTextField();
        copyBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Variable", 1, 24)); // NOI18N
        jLabel1.setText("REGISTRATION");

        jLabel2.setText("Name:");

        jLabel3.setText("Username:");

        jLabel4.setText("Email:");

        validateBtn.setText("Validate");
        validateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validateBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Password");

        generateBtn.setText("Generate");
        generateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBtnActionPerformed(evt);
            }
        });

        specialCB.setText("Special Character");

        numberCB.setText("Numbers");

        lengthCB.setText("Length");

        buttonGroup1.add(autoRB);
        autoRB.setSelected(true);
        autoRB.setText("Automated");
        autoRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoRBActionPerformed(evt);
            }
        });

        buttonGroup1.add(manualRB);
        manualRB.setText("Manual");
        manualRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualRBActionPerformed(evt);
            }
        });

        passwordTB.setEnabled(false);

        rePasswordTB.setEnabled(false);

        jLabel6.setText("Enter Password:");

        jLabel7.setText("Re-Enter Password");

        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        copyBtn.setText("Copy");
        copyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(manualRB, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(autoRB, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(copyTB, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rePasswordTB, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passwordTB, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameTB, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usernameTB, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailTB))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(specialCB)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(numberCB, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lengthCB, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(lengthTB, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(validateBtn)
                            .addComponent(copyBtn))
                        .addGap(47, 47, 47))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generateBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(registerBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(177, 177, 177))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(usernameTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(validateBtn)
                    .addComponent(emailTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(autoRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(specialCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numberCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lengthCB)
                    .addComponent(lengthTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generateBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copyTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(copyBtn))
                .addGap(9, 9, 9)
                .addComponent(manualRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rePasswordTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registerBtn)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBtnActionPerformed
        String username = usernameTB.getText();
    int length = 12; // Default length if not specified by the user
    boolean useSpecialChars = specialCB.isSelected();
    boolean useNumbers = numberCB.isSelected();

    if (lengthCB.isSelected()) {
        if (!Pattern.matches("[0-9]+", lengthTB.getText())) {
            
            JOptionPane.showMessageDialog(this, "Please enter a valid number for password length.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        length = Integer.parseInt(lengthTB.getText());
    }

    if(usernameTB.getText().isBlank())
    {
        JOptionPane.showMessageDialog(this, "Please enter a valid username.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    // Generate password
    String generatedPassword = generatePassword(username, length, useSpecialChars, useNumbers);
    copyTB.setText(generatedPassword);
    }//GEN-LAST:event_generateBtnActionPerformed

    private void manualRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualRBActionPerformed
        
        generateBtn.setEnabled(false);
        specialCB.setEnabled(false);
        numberCB.setEnabled(false);
        lengthCB.setEnabled(false);
        lengthTB.setEnabled(false);
        copyTB.setEnabled(false);
        copyBtn.setEnabled(false);
        
        passwordTB.setEnabled(true);
        rePasswordTB.setEnabled(true);
    }//GEN-LAST:event_manualRBActionPerformed
    
    private String generatePassword(String username, int length, boolean useSpecialChars, boolean useNumbers) 
    {
    String lowercaseLetters = "abcdefghijklmnopqrstuvwxyz";
    String uppercaseLetters = lowercaseLetters.toUpperCase();
    String specialCharacters = "!@#$%^&*()_+-=[]{}|;:,.<>?";
    String numbers = "0123456789";

    StringBuilder passwordChars = new StringBuilder();
    passwordChars.append(lowercaseLetters);
    passwordChars.append(uppercaseLetters);
    if (useSpecialChars) {
        passwordChars.append(specialCharacters);
    }
    if (useNumbers) {
        passwordChars.append(numbers);
    }

    SecureRandom random = new SecureRandom();
    StringBuilder password = new StringBuilder();
    for (int i = 0; i < length; i++) {
        int randomIndex = random.nextInt(passwordChars.length());
        password.append(passwordChars.charAt(randomIndex));
    }

    boolean placeAtFront = random.nextBoolean();
    if (placeAtFront) {
        password.insert(0, username);
    } else {
        password.append(username);
    }

    return password.toString();
    }
    private void autoRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoRBActionPerformed
        
        
        generateBtn.setEnabled(true);
        specialCB.setEnabled(true);
        numberCB.setEnabled(true);
        lengthCB.setEnabled(true);
        lengthTB.setEnabled(true);
        copyTB.setEnabled(true);
        copyBtn.setEnabled(true);
        
        passwordTB.setEnabled(false);
        rePasswordTB.setEnabled(false);
    }//GEN-LAST:event_autoRBActionPerformed

    private void validateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validateBtnActionPerformed
        if(Pattern.matches("^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$", emailTB.getText()))
        {
            isValidEmail = true;
            JOptionPane.showMessageDialog(this, "You've successfully validated email.", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            isValidEmail = false;
            JOptionPane.showMessageDialog(this, "Please enter a valid email.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_validateBtnActionPerformed

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        if(!isValidEmail)
        {
            JOptionPane.showMessageDialog(this, "Please enter a valid email address.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(nameTB.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "Please enter a valid name.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(usernameTB.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "Please enter a valid username.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
                
        if(autoRB.isSelected())
        {
            if(!copyTB.getText().isBlank())
            {
                JOptionPane.showMessageDialog(this, "You've successfully made an account.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Passowrd is empty.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }
        else
        {
            if(!passwordTB.getText().isBlank())
            {
                if(passwordTB.getText().equals(rePasswordTB.getText()))
                {
                    JOptionPane.showMessageDialog(this, "You've successfully made an account.", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Passwords are not the same", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Passowrd is empty.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_registerBtnActionPerformed

    private void copyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyBtnActionPerformed
        String myString = copyTB.getText();
        StringSelection stringSelection = new StringSelection(myString);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, null);
        JOptionPane.showMessageDialog(this, "Password copied to clipboard.", "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_copyBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton autoRB;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton copyBtn;
    private javax.swing.JTextField copyTB;
    private javax.swing.JTextField emailTB;
    private javax.swing.JButton generateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JCheckBox lengthCB;
    private javax.swing.JTextField lengthTB;
    private javax.swing.JRadioButton manualRB;
    private javax.swing.JTextField nameTB;
    private javax.swing.JCheckBox numberCB;
    private javax.swing.JTextField passwordTB;
    private javax.swing.JTextField rePasswordTB;
    private javax.swing.JButton registerBtn;
    private javax.swing.JCheckBox specialCB;
    private javax.swing.JTextField usernameTB;
    private javax.swing.JButton validateBtn;
    // End of variables declaration//GEN-END:variables
}
